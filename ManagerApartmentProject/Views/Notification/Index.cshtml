@using Microsoft.Extensions.Logging;
@using ManagerApartmentProject.Controllers
@model NotificationViewModel
@inject ILogger<NotificationController> logger
@{
    ViewData["Title"] = "Thông báo";
}

<!-- Tab for notification -->
<div class="card-header">
    <ul class="nav nav-tabs card-header-tabs">
        <li class="nav-item">
            <a class="nav-link active" href="#all" data-toggle="tab">Tất cả</a>
        </li>
        @if(User.IsInRole("Admin")||User.IsInRole("SuperAdmin")){
        <li class="nav-item">
            <a class="nav-link" href="#my" data-toggle="tab">Của tôi</a>
        </li>
        }
    </ul>
</div>
<!-- Content: List notification -->
<div class="tab-content">
    <!-- Hiển thị tất cả thông báo -->
    <div id="all" class="tab-pane active">
        @await Html.PartialAsync(
            "_RenderNotifications.cshtml", 
            Model.allNotifications,
            new ViewDataDictionary(ViewData){{"auth", false}}
        )

        @await Html.PartialAsync(
            "_RenderPagination.cshtml",
            new {
                start = Model.allNotificationsStart,
                end = Model.allNotificationsEnd,
                name = "of-all"
            }
        )
    </div>
    
    <!-- Hiển thị thông báo do chính admin đó tạo -->
    @if (User.IsInRole("SuperAdmin") || User.IsInRole("Admin"))
    {
        <div id="my" class="tab-pane" data-min-page="@Model.">
            <div class="tab-pane-header">
                <a type="button" class="btn btn-default btn-sm" asp-controller="Notification" asp-action="Create">
                    <span class="glyphicon glyphicon-plus"></span>
                    Create
                </a>
            </div>
            @await Html.PartialAsync(
                "_RenderNotifications.cshtml", 
                Model.myNotifications,
                new ViewDataDictionary(ViewData){{"auth", true}}
            )
            
            @await Html.PartialAsync(
                "_RenderPagination.cshtml",
                new {
                    start = Model.myNotificationsStart,
                    end = Model.myNotificationsEnd,
                    name = "of-my"
                }
            )
        </div>
    }
</div>

<!-- Modal -->
<div class="modal" tabindex="-1" id="modal">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Model Delete</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <p>Modal body text goes here.</p>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
        <button type="button" class="btn btn-primary" id="delete-confirm">Delete</button>
      </div>
    </div>
  </div>
</div>

@section Css
{
    <link rel="stylesheet" href="~/css/notification.css">
    @* <link rel="stylesheet" href="lib/bootstrap/dist/css/bootstrap.min.css"> *@
}

@section Scripts
{
    <script src="~/js/notification.js"></script>
}
